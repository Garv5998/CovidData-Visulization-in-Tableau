<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Table2)' inline='true' name='federated.0xz98kg1uwjh0813mf7uj1lpe88a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table2' name='excel-direct.0i452ow1iv8oe71a3r7r60ryioik'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='A:/Data analytics/tableau/CovidData Visulisation/Table2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0i452ow1iv8oe71a3r7r60ryioik' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0i452ow1iv8oe71a3r7r60ryioik' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B04722745583458F9ED0B1FF038B5950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B04722745583458F9ED0B1FF038B5950]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B04722745583458F9ED0B1FF038B5950]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B04722745583458F9ED0B1FF038B5950'>
            <properties context=''>
              <relation connection='excel-direct.0i452ow1iv8oe71a3r7r60ryioik' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table3)' inline='true' name='federated.02sw582077elkf1g6lumx1xp10j4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table3' name='excel-direct.11naesj1wrow4b14piogi1bnfypn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='A:/Data analytics/tableau/CovidData Visulisation/Table3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.11naesj1wrow4b14piogi1bnfypn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.11naesj1wrow4b14piogi1bnfypn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D239:no:A1:D239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_88F2F27348A546DFB390BEDA92CE7CF1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_88F2F27348A546DFB390BEDA92CE7CF1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_88F2F27348A546DFB390BEDA92CE7CF1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_88F2F27348A546DFB390BEDA92CE7CF1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_88F2F27348A546DFB390BEDA92CE7CF1]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_88F2F27348A546DFB390BEDA92CE7CF1'>
            <properties context=''>
              <relation connection='excel-direct.11naesj1wrow4b14piogi1bnfypn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table4)' inline='true' name='federated.0531tej0ofu7b817wted608ds89b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table4' name='excel-direct.13k2awa06ybbzn19hiyhq0q2vtdt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='A:/Data analytics/tableau/CovidData Visulisation/Table4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13k2awa06ybbzn19hiyhq0q2vtdt' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A4:E10001:no:A4:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13k2awa06ybbzn19hiyhq0q2vtdt' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A4:E10001:no:A4:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A4:E10001:no:A4:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_288BC14A9AAC4B02B7984609058CA50B]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_288BC14A9AAC4B02B7984609058CA50B'>
            <properties context=''>
              <relation connection='excel-direct.13k2awa06ybbzn19hiyhq0q2vtdt' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A4:E10001:no:A4:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table1)' inline='true' name='federated.1dn7apy1k0k9hb1f2og7f1ec0n63' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table1' name='excel-direct.1e8hurp0nb295w10dhgz10eicmgh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='A:/Data analytics/tableau/CovidData Visulisation/Table1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1e8hurp0nb295w10dhgz10eicmgh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1e8hurp0nb295w10dhgz10eicmgh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_820DC11E75B44E7CBA177191F84AED5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_820DC11E75B44E7CBA177191F84AED5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_820DC11E75B44E7CBA177191F84AED5E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_820DC11E75B44E7CBA177191F84AED5E]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_820DC11E75B44E7CBA177191F84AED5E'>
            <properties context=''>
              <relation connection='excel-direct.1e8hurp0nb295w10dhgz10eicmgh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Covid Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table1)' name='federated.1dn7apy1k0k9hb1f2og7f1ec0n63' />
          </datasources>
          <datasource-dependencies datasource='federated.1dn7apy1k0k9hb1f2og7f1ec0n63'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[:Measure Names]' value='167' />
            <format attr='text-format' field='[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='height' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#aaffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='2' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{69364B19-DD0A-457E-949C-572433142651}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table2)' name='federated.0xz98kg1uwjh0813mf7uj1lpe88a' />
          </datasources>
          <datasource-dependencies datasource='federated.0xz98kg1uwjh0813mf7uj1lpe88a'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:location:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Low income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:location:nk]' member='&quot;Upper middle income&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]' value='86' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{6DCA52DA-4381-4BF2-BF66-5D43C6A359F4}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table3)' name='federated.02sw582077elkf1g6lumx1xp10j4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02sw582077elkf1g6lumx1xp10j4'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02sw582077elkf1g6lumx1xp10j4].[Longitude (generated)]' field-type='quantitative' max='57762758.314254157' min='20072816.924112625' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02sw582077elkf1g6lumx1xp10j4].[Latitude (generated)]' field-type='quantitative' max='12561364.885037908' min='-4991378.8758087363' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02sw582077elkf1g6lumx1xp10j4].[sum:PercentPopulationInfected:qk]' max='20.0' num-steps='8' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.02sw582077elkf1g6lumx1xp10j4].[none:Location:nk]' />
              <color column='[federated.02sw582077elkf1g6lumx1xp10j4].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.02sw582077elkf1g6lumx1xp10j4].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02sw582077elkf1g6lumx1xp10j4].[Latitude (generated)]</rows>
        <cols>[federated.02sw582077elkf1g6lumx1xp10j4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C4D999F7-B5C1-42F6-8B45-F66791981A40}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Infection Rate per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table4)' name='federated.0531tej0ofu7b817wted608ds89b' />
          </datasources>
          <datasource-dependencies datasource='federated.0531tej0ofu7b817wted608ds89b'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0531tej0ofu7b817wted608ds89b].[none:date:nk]'>
            <groupfilter function='level-members' level='[none:date:nk]' />
          </filter>
          <slices>
            <column>[federated.0531tej0ofu7b817wted608ds89b].[none:date:nk]</column>
            <column>[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0531tej0ofu7b817wted608ds89b].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0531tej0ofu7b817wted608ds89b].[none:date:nk]' value='true' />
            <format attr='display' field='[federated.0531tej0ofu7b817wted608ds89b].[tmn:date:qk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]' />
              <text column='[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]' />
              <color column='[federated.0531tej0ofu7b817wted608ds89b].[none:Forecast Indicator:nk]' />
              <text column='[federated.0531tej0ofu7b817wted608ds89b].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0531tej0ofu7b817wted608ds89b].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0531tej0ofu7b817wted608ds89b].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{2E258CA2-AA3D-47E4-B18B-421865B425EE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (Table4)' name='federated.0531tej0ofu7b817wted608ds89b' />
      </datasources>
      <datasource-dependencies datasource='federated.0531tej0ofu7b817wted608ds89b'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='8' param='horz' type-v2='layout-flow' w='99040' x='480' y='940'>
            <zone h='98120' id='6' type-v2='layout-basic' w='89370' x='480' y='940'>
              <zone h='38660' id='5' name='Sheet 2' w='43334' x='480' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52056' id='15' name='Sheet 3' w='46036' x='43814' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46064' id='17' name='Sheet 4' w='79280' x='480' y='52996'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46064' id='19' name='Sheet 4' pane-specification-id='0' param='[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]&#10;[federated.0531tej0ofu7b817wted608ds89b].[none:Forecast Indicator:nk]' type-v2='color' w='10090' x='79760' y='52996'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13396' id='20' name='Sheet 1' w='43334' x='480' y='39600'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='161' h='98120' id='21' is-fixed='true' type-v2='layout-basic' w='9670' x='89850' y='940'>
              <zone h='55229' id='7' param='vert' type-v2='layout-flow' w='9670' x='89850' y='940'>
                <zone fixed-size='256' h='27614' id='9' is-fixed='true' name='Sheet 2' pane-specification-id='0' param='[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]' type-v2='color' w='9670' x='89850' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='275' h='27615' id='16' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.02sw582077elkf1g6lumx1xp10j4].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9670' x='89850' y='28554'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='42891' id='22' param='vert' type-v2='layout-flow' w='9670' x='89850' y='56169'>
                <zone fixed-size='555' h='42891' id='18' is-fixed='true' name='Sheet 4' param='[federated.0531tej0ofu7b817wted608ds89b].[none:date:nk]' type-v2='filter' w='9670' x='89850' y='56169'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='23' param='vert' type-v2='layout-flow' w='99040' x='480' y='940'>
                <zone fixed-size='280' h='38660' id='5' is-fixed='true' name='Sheet 2' w='43334' x='480' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='27614' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]' type-v2='color' w='9670' x='89850' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52056' id='15' is-fixed='true' name='Sheet 3' w='46036' x='43814' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='275' h='27615' id='16' name='Sheet 3' pane-specification-id='0' param='[federated.02sw582077elkf1g6lumx1xp10j4].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9670' x='89850' y='28554'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='13396' id='20' is-fixed='true' name='Sheet 1' w='43334' x='480' y='39600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='555' h='42891' id='18' mode='checkdropdown' name='Sheet 4' param='[federated.0531tej0ofu7b817wted608ds89b].[none:date:nk]' type-v2='filter' w='9670' x='89850' y='56169'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46064' id='17' is-fixed='true' name='Sheet 4' w='79280' x='480' y='52996'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='46064' id='19' name='Sheet 4' pane-specification-id='0' param='[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]&#10;[federated.0531tej0ofu7b817wted608ds89b].[none:Forecast Indicator:nk]' type-v2='color' w='10090' x='79760' y='52996'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DC984E7C-D08A-4C63-8634-A10889FD9D8C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='54'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dn7apy1k0k9hb1f2og7f1ec0n63].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6FAFE24-F30D-4742-937A-3A12B11DE2A2}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A300CBE2-C82F-49C4-B171-2E67C0C07FDF}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='104'>
            <card pane-specification-id='0' param='[federated.02sw582077elkf1g6lumx1xp10j4].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02sw582077elkf1g6lumx1xp10j4].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{33618897-C7AF-4BDB-B267-953C94A817F7}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0531tej0ofu7b817wted608ds89b].[none:date:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]&#10;[federated.0531tej0ofu7b817wted608ds89b].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0531tej0ofu7b817wted608ds89b].[none:Calculation_837388113527971840:qk]</field>
            <field>[federated.0531tej0ofu7b817wted608ds89b].[none:Calculation_837388113528037377:qk]</field>
            <field>[federated.0531tej0ofu7b817wted608ds89b].[none:Forecast Indicator:nk]</field>
            <field>[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]</field>
            <field>[federated.0531tej0ofu7b817wted608ds89b].[none:date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D51F1165-33D8-4799-BD86-983702001D2F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0xz98kg1uwjh0813mf7uj1lpe88a].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0531tej0ofu7b817wted608ds89b].[none:Forecast Indicator:nk]</field>
              <field>[federated.0531tej0ofu7b817wted608ds89b].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2064919B-0F21-4BF5-8BE5-9BEB480C7572}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      wWE9/n/jnu+16V0powAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='70' name='Sheet 1' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
